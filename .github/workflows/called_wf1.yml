name: called_wf1
 # echo 'use-deployment-setting-file: ${{ fromJson(needs.call_json.outputs.json).use-deployment-setting-file }}'
on:
  workflow_call:
    inputs:
      solution_names:
        description: solution names
        required: true
        type: string
      target_env:
        description: target environment TEST/UAT/PROD
        required: true
        type: string
      use_deployment_setting_file1:
        description: use deployment file TRUE/FLASE
        required: true
        type: string
        
      solution_details:
        description: deployment settings details for solutions
        required: true
        type: string

jobs:
  job1:
    strategy:
     max-parallel: 1
     matrix:
      solution_name: ${{ fromJSON(github.event.inputs.solution_names) }}
    runs-on: ubuntu-latest
    steps:
    - name: Get deployment settings details1
      run: |
       echo '${{ inputs.solution_details }}' > target_details.json
       echo 'use_deployment_settings_file=$(jq -r '."${{ matrix.solution_name }}"."use_deployment_settings_file"' target_details.json)'  >> $GITHUB_ENV
       echo ${{ env.use_deployment_settings_file }}
      
       
    - name: Get Deployment settings details
      run: |
       if ${{ env.use_deployment_settings_file }} == 'true';then
        echo 'deployment_setting_file_path=solutions/${{ matrix.solution_name }}/deploymentsettings/deploymentsettings_${{  github.event.inputs.target_env}}.json' >> $GITHUB_ENV
       else
        echo 'deployment_setting_file_path=""' >> $GITHUB_ENV
       fi 
    - name: print
      run: |
          echo '${{ inputs.solution_names }}'
           echo '${{ matrix.solution_name }}'
          echo '${{ inputs.target_env }}'
           echo '${{ inputs.use_deployment_setting_file }}'
           echo '${{ env.deployment_setting_file_path }}'
           echo ${{ env.use_deployment_settings_file }}
           
         
